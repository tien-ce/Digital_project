	/*
	 * dht20.h
	 *
	 *  Created on: Oct 12, 2024
	 *      Author: thuyh
	 */

	#ifndef INS_DHT20_H_
	#define INS_DHT20_H_
	#include "main.h"
	#include "i2c_master.h"
	#include "stdio.h"
	#include "stdlib.h"
	#define DHT20_OK                             0 //Trạng thái không có lỗi, mọi thứ hoạt động tốt.
	#define DHT20_ERROR_CHECKSUM                -10 //Lỗi khi kiểm tra tổng kiểm (checksum) không khớp.
	#define DHT20_ERROR_CONNECT                 -11//Lỗi khi không thể kết nối với cảm biến.
	#define DHT20_MISSING_BYTES                 -12// Lỗi do thiếu dữ liệu từ cảm biến.
	#define DHT20_ERROR_BYTES_ALL_ZERO          -13//Lỗi khi tất cả các byte dữ liệu đọc từ cảm biến đều bằng 0.
	#define DHT20_ERROR_READ_TIMEOUT            -14//Lỗi khi quá trình đọc dữ liệu bị quá thời gian quy định.
	#define DHT20_ERROR_LASTREAD                -15 //Lỗi liên quan đến lần đọc cuối cùng từ cảm biến.
	typedef struct {
		I2C_HandleTypeDef *hi2c;  // Giao tiếp I2C được sử dụng
		float humidity; // Độ ẩm
		float temperature; // Nhiệt độ
		float humOffset; // Hiệu chỉnh độ ẩm
		float tempOffset;// Hiệu chỉnh nhiệt độ
		uint8_t status; // Trạng thái của cảm biến
		uint32_t lastRequest; // Thời gian (đếm theo ms) của lần yêu cầu đo cuối cùng từ cảm biến.
		uint32_t lastRead; //Thời gian (đếm theo ms) của lần đọc dữ liệu cuối cùng từ cảm biến.
		uint8_t bits[7];// Mảng nhận dữ liệu
	} DHT20_t;
	uint8_t DHT20_ReadStatus(DHT20_t *dht20); // Hàm đọc trạng thái hiện tại của cảm biến DHT20. Trả về mã trạng thái hoặc mã lỗi nếu có
	uint8_t DHT20_ResetSensor(DHT20_t *dht20); //  Hàm đặt lại cảm biến DHT20, trả về mã trạng thái sau khi thực hiện.
	uint8_t DHT20_ResetRegister(DHT20_t *dht20, uint8_t reg); //Hàm đặt lại một thanh ghi cụ thể của cảm biến, trả về trạng thái sau khi thực hiện.
	#endif /* INS_DHT20_H_ */
